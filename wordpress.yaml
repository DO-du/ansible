- name: MySQL Deployment
  hosts: 192.168.200.101
  vars_files:
    - ./vars/vars.yaml

  tasks:
    - name: Database in Debian
      block:
        - name: Install MySQL Package
          apt:
            update_cache: true
            name: mysql-server, python3-pymysql
            state: present
        - name: Starting MySQL Service
          service:
            name: mysql
            state: started
            enabled: yes
        - name: Create Wordpress Database
          mysql_db:
            login_unix_socket: "{{ db['mysql_sock'] }}"
            name: "{{ db['mysql_db_name'] }}"
            state: present
        - name: Create Wordpress User
          mysql_user:
            check_implicit_admin: yes
            login_unix_socket: "{{ db['mysql_sock'] }}"
            name: "{{ db['mysql_user_name'] }}"
            password: "{{ db['mysql_user_passwd'] }}"
            host: localhost
            priv: wpdb.*:ALL,GRANT
            state: present
      when: ansible_facts['os_family'] == "Debian"
    - name: Database in RedHat
      block:
        - name: Install MariaDB Package
          yum:
            update_cache: true
            name: mariadb-server, python3-pymysql
            state: present
        - name: Starting Maria Service
          service:
            name: mariadb
            state: started
        - name: Create Wordpress Database
          mysql_db:
            login_unix_socket: "{{ db['mysql_sock'] }}"
            name: "{{ db['mysql_db_name'] }}"
            state: present
            enabled: yes
        - name: Create Wordpress User
          mysql_user:
            check_implicit_admin: yes
            login_unix_socket: "{{ db['mysql_sock'] }}"
            name: "{{ db['mysql_user_name'] }}"
            password: "{{ db['mysql_user_passwd'] }}"
            host: localhost              
            priv: wpdb.*:ALL,GRANT
            state: present
      when: ansible_facts['os_family'] == "RedHat"

- name: Wordpress Deployment
  hosts: 192.168.200.102
  vars_files:
    - ./vars/vars.yaml

  tasks:
    - name: Install Apache2 Package in Debian
      block:
        - name: Download Wordpress Source
          get_url:
            url: "{{ web['wp_url'] }}"
 #      checksum: "{{ web['wp_checksum'] }}"
            dest: "{{ web['wp_tar'] }}"
          async: 300
          poll: 0
          register: wp_download_result
        - name: Install Apache2 Package
          apt:
            name: apache2, php, php-mysql, php-gd, php-mbstring
            state: present
        - name: Change Apache2 Service Ports
          template:
            src: jinja/ports.conf.j2
            dest: /etc/apache2/ports.conf
          notify:
            - Restart web services
        - name: Starting Apache2 Service
          service:
            name: apache2
            state: started
            enabled: yes
        - name: Sync Download Wordpress
          async_status:
            jid: "{{ wp_download_result.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 100
          delay: 5
        - name: Unarchive Wordpress Source
          unarchive:
            src: "{{ web['wp_tar'] }}"
            remote_src: true
            dest: /var/www/html
        - name: Setting Wordpress Database Configuration
          template:
            src: jinja/wp-config.php.j2
            dest: "{{ web['wp_config'] }}"
      when: ansible_facts['os_family'] == "Debian"
    - name: Install Apache2 Package in RedHat
      block:
        - name: Download Wordpress Source
          get_url:
            url: "{{ web['wp_url'] }}"
 #      checksum: "{{ web['wp_checksum'] }}"
            dest: "{{ web['wp_tar'] }}"
          async: 300
          poll: 0
          register: wp_download_result
              
        - name: Install Httpd Package
          apt:
            name: httpd, php, php-mysql, php-gd, php-mbstring
            state: present
        - name: Change Httpd Service Ports
          template:
            src: jinja/ports.conf.j2
            dest: /etc/httpd/conf/https.conf
          notify:
            - Restart web services
        - name: Starting Httpd Service
          service:
            name: httpd
            state: started
            enabled: yes
        - name: Sync Download Wordpress          
          async_status:
            jid: "{{ wp_download_result.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 100
          delay: 5       
        - name: Unarchive Wordpress Source
          unarchive:
            src: "{{ web['wp_tar'] }}"
            remote_src: true
            dest: /var/www/html
        - name: Setting Wordpress Database Configuration
          template:
            src: jinja/wp-config.php.j2
            dest: "{{ web['wp_config'] }}"
      when: ansible_facts['os_family'] == "RedHat"



  handlers:
  - name: Restart web services
    service:
      name: apache2 
      state: restarted






